[{"D:\\Webfejlesztés\\JS\\React\\00-react-gyak\\src\\components\\App.js":"1","D:\\Webfejlesztés\\JS\\React\\00-react-gyak\\src\\components\\Nav.js":"2","D:\\Webfejlesztés\\JS\\React\\00-react-gyak\\src\\components\\Product.js":"3","D:\\Webfejlesztés\\JS\\React\\00-react-gyak\\src\\components\\ProductList.js":"4","D:\\Webfejlesztés\\JS\\React\\00-react-gyak\\src\\products.js":"5","D:\\Webfejlesztés\\JS\\React\\00-react-gyak\\src\\components\\pages\\OrderDetails.js":"6","D:\\Webfejlesztés\\JS\\React\\00-react-gyak\\src\\components\\pages\\ProductDetails.js":"7","D:\\Webfejlesztés\\JS\\React\\00-react-gyak\\src\\reportWebVitals.js":"8","D:\\Webfejlesztés\\JS\\React\\00-react-gyak\\src\\index.js":"9"},{"size":1668,"mtime":1606652054385,"results":"10","hashOfConfig":"11"},{"size":3780,"mtime":1606652017517,"results":"12","hashOfConfig":"11"},{"size":917,"mtime":1606650299868,"results":"13","hashOfConfig":"11"},{"size":397,"mtime":1606652235780,"results":"14","hashOfConfig":"11"},{"size":1642,"mtime":1606587018902,"results":"15","hashOfConfig":"11"},{"size":204,"mtime":1606590501551,"results":"16","hashOfConfig":"11"},{"size":1207,"mtime":1606590512345,"results":"17","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"11"},{"size":489,"mtime":1606465534849,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1t8rn8n",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"D:\\Webfejlesztés\\JS\\React\\00-react-gyak\\src\\components\\App.js",["42"],"D:\\Webfejlesztés\\JS\\React\\00-react-gyak\\src\\components\\Nav.js",["43"],"import React, { useState } from 'react';\r\nimport { RiShoppingBagLine } from 'react-icons/ri';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\nconst Nav = ({ addToCart, cartItems, setCartItems }) => {\r\n  const [showCartDetails, setShowCartDetails] = useState(false);\r\n\r\n  let history = useHistory();\r\n\r\n  const sumQty = cartItems.reduce((arr, acc) => arr + acc.qty, 0);\r\n  const itemsPrice = cartItems.reduce((arr, acc) => arr + acc.price * acc.qty, 0);\r\n  const taxPrice = itemsPrice * 0.14;\r\n  const shippingPrice = itemsPrice + taxPrice > 35000 ? 'Free' : cartItems.length > 0 ? 200 : 0;\r\n  const totalPrice = itemsPrice + taxPrice + shippingPrice;\r\n\r\n  const checkOut = (product) => {\r\n    setShowCartDetails(!showCartDetails);\r\n    setCartItems([]);\r\n    history.push('/order-details');\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"container\">\r\n        <div className=\"navigation-content\">\r\n          <div className=\"logo\">\r\n            <NavLink to=\"/\">Amazona Cars</NavLink>\r\n          </div>\r\n          <div className=\"basket\" onClick={() => setShowCartDetails(!showCartDetails)}>\r\n            <RiShoppingBagLine />\r\n            <span>{sumQty}</span>\r\n          </div>\r\n        </div>\r\n        <div className={`cart-details ${showCartDetails && 'show'}`}>\r\n          <h1>Shoping Cart</h1>\r\n          <span className=\"cart-details__closeBtn\" onClick={() => setShowCartDetails(!showCartDetails)}>\r\n            X\r\n          </span>\r\n\r\n          {cartItems.length === 0 ? (\r\n            <div className=\"cart-details__empty-cart\">\r\n              <h3>Your cart is empty.</h3>\r\n              <Link to=\"/\">\r\n                <button onClick={() => setShowCartDetails(!showCartDetails)}>Go To Shopping</button>\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"cart-details__products\">\r\n                <ul>\r\n                  {cartItems.map((product) => (\r\n                    <li key={product.id}>\r\n                      <img src={`/${product.img}`} alt={`car-${product.id}-image`} />\r\n                      <h4>{product.name}</h4>\r\n                      <div className=\"qty\">\r\n                        <span data-type=\"inc\" onClick={() => addToCart(product)}>\r\n                          +\r\n                        </span>\r\n                        <div className=\"quantity\">{product.qty}</div>\r\n                        <span data-type=\"dec\" onClick={(e) => addToCart(product, e.target.dataset.type)}>\r\n                          -\r\n                        </span>\r\n                      </div>\r\n                      <p>${product.price}</p>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"summary\">\r\n                <div className=\"summary__details\">\r\n                  <div>\r\n                    <p>Items price:</p>\r\n                    <p>{itemsPrice}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p>Tax:</p>\r\n                    <p>{taxPrice.toFixed(2)}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p>Shipping:</p>\r\n                    <p className={itemsPrice > 35000 ? 'green' : ''}>{shippingPrice}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"summary__total\">\r\n                  <h2>Total:</h2>\r\n                  <p>\r\n                    ${shippingPrice !== 'Free' ? totalPrice.toFixed(2) : totalPrice.slice(0, totalPrice.length - 4)}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <button onClick={checkOut}>Checkout</button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","D:\\Webfejlesztés\\JS\\React\\00-react-gyak\\src\\components\\Product.js",[],"D:\\Webfejlesztés\\JS\\React\\00-react-gyak\\src\\components\\ProductList.js",[],"D:\\Webfejlesztés\\JS\\React\\00-react-gyak\\src\\products.js",[],"D:\\Webfejlesztés\\JS\\React\\00-react-gyak\\src\\components\\pages\\OrderDetails.js",[],["44","45"],"D:\\Webfejlesztés\\JS\\React\\00-react-gyak\\src\\components\\pages\\ProductDetails.js",["46"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { MdNavigateBefore} from 'react-icons/md';\r\n\r\nconst ProductDetails = (props) => {\r\n  const [products, setProducts] = useState([]);\r\n  let { id } = useParams();\r\n  id = id - 1;\r\n\r\n  useEffect(() => {\r\n    setProducts(...products, props[id]);\r\n  }, []);\r\n  const { name, brand, price, img, info } = products;\r\n\r\n  return (\r\n    <div className=\"container car_details\">\r\n      <Link to=\"/\">\r\n        <MdNavigateBefore />\r\n        Back to Shop\r\n      </Link>\r\n      <div className=\"product__item\">\r\n        <img src={`/${img}`} alt={name} />\r\n        {/* public\\img\\auto2.jpg */}\r\n        <div className=\"product__details\">\r\n          <ul>\r\n            <li>\r\n              <h1>{name}</h1>\r\n            </li>\r\n            <li>\r\n              <h3>{brand}</h3>\r\n            </li>\r\n            <li>\r\n              <p>${price}</p>\r\n            </li>\r\n            <li>\r\n              <p>{info}</p>\r\n            </li>\r\n          </ul>\r\n\r\n          <button onClick={() => props.addToCart(products)}>Add To Cart</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n","D:\\Webfejlesztés\\JS\\React\\00-react-gyak\\src\\reportWebVitals.js",[],"D:\\Webfejlesztés\\JS\\React\\00-react-gyak\\src\\index.js",[],["47","48"],{"ruleId":"49","severity":1,"message":"50","line":17,"column":5,"nodeType":"51","messageId":"52","endLine":35,"endColumn":6},{"ruleId":"53","severity":1,"message":"54","line":54,"column":23,"nodeType":"55","endLine":54,"endColumn":86},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":12,"column":6,"nodeType":"62","endLine":12,"endColumn":8,"suggestions":"63"},{"ruleId":"56","replacedBy":"64"},{"ruleId":"58","replacedBy":"65"},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id', 'products', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["68"],["66"],["67"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [id, products, props]",{"range":"71","text":"72"},[360,362],"[id, products, props]"]